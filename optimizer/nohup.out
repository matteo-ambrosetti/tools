The output file already exist, exit...
The output file already exist, exit...
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Offspring number  3
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    os.system("rm {}".format(paramfile))
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    q  = inversion(LHS, RHS, System=system)
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Offspring number  3
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Offspring number  3
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:227: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Traceback (most recent call last):
  File "optimizer.py", line 313, in <module>
    
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 223, in cost
    try:
  File "MMS/solver/solvers.pyx", line 9, in solvers.inversion
  File "<__array_function__ internals>", line 6, in solve
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 399, in solve
    r = gufunc(a, b, signature=signature, extobj=extobj)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/numpy/linalg/linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Offspring number  13
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Offspring number  13
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Offspring number  13
Offspring number  14
Offspring number  15
Offspring number  16
Offspring number  17
Offspring number  18
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Offspring number  13
Offspring number  14
Offspring number  15
Offspring number  16
Offspring number  17
Offspring number  18
Offspring number  19
Offspring number  20
Offspring number  21
Offspring number  22
Offspring number  23
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
optimizer.py:228: RuntimeWarning: invalid value encountered in double_scalars
  Eint = interaction_energy(system, q=q[0:system.NumAtoms], mu=q[system.NumAtoms+system.NumGroups:])
Offspring number  1
Offspring number  2
Offspring number  3
Offspring number  4
Offspring number  5
Offspring number  6
Offspring number  7
Offspring number  8
Offspring number  9
Offspring number  10
Offspring number  11
Offspring number  12
Offspring number  13
Offspring number  14
Offspring number  15
Offspring number  16
Offspring number  17
Offspring number  18
Offspring number  19
Offspring number  20
Offspring number  21
Offspring number  22
Offspring number  23
Offspring number  24
Traceback (most recent call last):
  File "optimizer.py", line 307, in <module>
    folder_list=folder_list
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 634, in evolve
    return EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, strategy_seeds, maximize, bounder, **args)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 480, in evolve
    offspring_fit = evaluator(candidates=offspring_cs, args=self._kwargs)
  File "/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/inspyred/ec/ec.py", line 619, in evaluator
    return func(cands, args)
  File "optimizer.py", line 236, in cost
    comp = (Eint[0,1]+Eint[0,2])*627.509
TypeError: 'float' object is not subscriptable
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
The output file already exist, exit...
/home/m.ambrosetti/anaconda3/envs/py3.7-dev/lib/python3.7/site-packages/pint/quantity.py:221: BehaviorChangeWarning: The way Pint handles NumPy operations has changed with the
implementation of NEP 18. Unimplemented NumPy operations will now fail instead of making
assumptions about units. Some functions, eg concat, will now return Quanties with units, where
they returned ndarrays previously. See https://github.com/hgrecco/pint/pull/905.

To hide this warning, wrap your first creation of an array Quantity with
warnings.catch_warnings(), like the following:

import numpy as np
import warnings
from pint import Quantity

with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    Quantity([])

To disable the new behavior, see
https://www.numpy.org/neps/nep-0018-array-function-protocol.html#implementation

  warnings.warn(array_function_change_msg, BehaviorChangeWarning)
validation.py:180: RuntimeWarning: divide by zero encountered in true_divide
  for mu_i in (100*(ref_mu-mu[0][0])/ref_mu):
validation.py:180: RuntimeWarning: invalid value encountered in true_divide
  for mu_i in (100*(ref_mu-mu[0][0])/ref_mu):
Traceback (most recent call last):
  File "validation.py", line 221, in <module>
    system.get_params()
  File "MMS/system/make_system.pyx", line 303, in make_system.System.get_params
  File "MMS/system/make_system.pyx", line 462, in make_system.Atom.read_parameters_fq
IndexError: index 0 is out of bounds for axis 0 with size 0
